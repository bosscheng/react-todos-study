{"ast":null,"code":"import _classCallCheck from \"/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/src/components/TodoList.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { toggleTodo as _toggleTodo, VisibilityFilters } from \"../actions\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\n\nvar TodoList = /*#__PURE__*/function (_Component) {\n  _inherits(TodoList, _Component);\n\n  var _super = _createSuper(TodoList);\n\n  function TodoList(props) {\n    _classCallCheck(this, TodoList);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          todos = _this$props.todos,\n          toggleTodo = _this$props.toggleTodo;\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, todos.map(function (todo) {\n        return /*#__PURE__*/React.createElement(Todo, Object.assign({\n          key: todo.id\n        }, todo, {\n          onClick: function onClick() {\n            return toggleTodo(todo.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nTodoList.propTypes = {\n  // 内部结构 判断\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\n\nvar getVisibleTodos = function getVisibleTodos(todos, filter) {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(function (t) {\n        return t.completed;\n      });\n\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(function (t) {\n        return !t.completed;\n      });\n\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n}; // 类似于 getter\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleTodo: function toggleTodo(id) {\n      return dispatch(_toggleTodo(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/wancheng/GitHub/react-todos-study/react-todos-es6-class-jsx/src/components/TodoList.jsx"],"names":["React","Component","toggleTodo","VisibilityFilters","connect","PropTypes","Todo","TodoList","props","todos","map","todo","id","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func","getVisibleTodos","filter","SHOW_ALL","SHOW_COMPLETED","t","SHOW_ACTIVE","Error","mapStateToProps","state","visibilityFilter","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAU,IAAVA,WAAR,EAAoBC,iBAApB,QAA4C,YAA5C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAElB;;;;6BAEQ;AAAA;;AAAA,wBACqB,KAAKA,KAD1B;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOP,UADP,eACOA,UADP;AAEL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKO,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,4BACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,WAAwBD,IAAxB;AAA8B,UAAA,OAAO,EAAE;AAAA,mBAAMT,UAAU,CAACS,IAAI,CAACC,EAAN,CAAhB;AAAA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,OAJA,CADL,CADJ;AASH;;;;EAhBkBX,S;;AAoBvBM,QAAQ,CAACM,SAAT,GAAqB;AACjB;AACAJ,EAAAA,KAAK,EAAEJ,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACrCH,IAAAA,EAAE,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADgB;AAErCC,IAAAA,SAAS,EAAEb,SAAS,CAACc,IAAV,CAAeF,UAFW;AAGrCG,IAAAA,IAAI,EAAEf,SAAS,CAACgB,MAAV,CAAiBJ;AAHc,GAAhB,EAItBA,UAJI,EAIQA,UANE;AAOjBf,EAAAA,UAAU,EAAEG,SAAS,CAACiB,IAAV,CAAeL;AAPV,CAArB;;AAWA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACd,KAAD,EAAQe,MAAR,EAAmB;AACvC,UAAQA,MAAR;AACI,SAAKrB,iBAAiB,CAACsB,QAAvB;AACI,aAAOhB,KAAP;;AACJ,SAAKN,iBAAiB,CAACuB,cAAvB;AACI,aAAOjB,KAAK,CAACe,MAAN,CAAa,UAAAG,CAAC;AAAA,eAAIA,CAAC,CAACT,SAAN;AAAA,OAAd,CAAP;;AACJ,SAAKf,iBAAiB,CAACyB,WAAvB;AACI,aAAOnB,KAAK,CAACe,MAAN,CAAa,UAAAG,CAAC;AAAA,eAAI,CAACA,CAAC,CAACT,SAAP;AAAA,OAAd,CAAP;;AACJ;AACI,YAAM,IAAIW,KAAJ,CAAU,qBAAqBL,MAA/B,CAAN;AARR;AAUH,CAXD,C,CAaA;;;AACA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BtB,IAAAA,KAAK,EAAEc,eAAe,CAACQ,KAAK,CAACtB,KAAP,EAAcsB,KAAK,CAACC,gBAApB;AADQ,GAAL;AAAA,CAA7B;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpChC,IAAAA,UAAU,EAAE,oBAAAU,EAAE;AAAA,aAAIsB,QAAQ,CAAChC,WAAU,CAACU,EAAD,CAAX,CAAZ;AAAA;AADsB,GAAL;AAAA,CAAnC;;AAIA,eAAeR,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,QAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {toggleTodo, VisibilityFilters} from \"../actions\";\nimport {connect} from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let {todos, toggleTodo} = this.props;\n        return (\n            <ul>\n                {todos.map(todo => {\n                    return (\n                        <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)}/>\n                    )\n                })}\n            </ul>\n        )\n    }\n}\n\n\nTodoList.propTypes = {\n    // 内部结构 判断\n    todos: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        completed: PropTypes.bool.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired).isRequired,\n    toggleTodo: PropTypes.func.isRequired\n};\n\n\nconst getVisibleTodos = (todos, filter) => {\n    switch (filter) {\n        case VisibilityFilters.SHOW_ALL:\n            return todos\n        case VisibilityFilters.SHOW_COMPLETED:\n            return todos.filter(t => t.completed)\n        case VisibilityFilters.SHOW_ACTIVE:\n            return todos.filter(t => !t.completed)\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n};\n\n// 类似于 getter\nconst mapStateToProps = state => ({\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n"]},"metadata":{},"sourceType":"module"}